---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MileHighGuy.
--- DateTime: 2/5/2024 7:45 PM
---

-- add new button to battle screen

local w,h = ScriptCB_GetSafeScreenInfo()
local screen_w, screen_h, v, widescreen = ScriptCB_GetScreenInfo()
local action_w = w
local action_h = h * 0.05

if(gPlatformStr == "PC") then
    local BackButtonW = 150	-- made wider to fix 9173 - NM 8/25/04
    local BackButtonH = 25

    local left = BackButtonW * 0.5
    local right = w - BackButtonW * 0.5
    local spacing = (right - left) / 3

    ifs_freeform_battle.action = NewIFContainer{
        ScreenRelativeX = 0.0, -- left
        ScreenRelativeY = 1.0, -- bottom
        width = action_w,
        height = action_h,
        x = 0,
        ZPos = 190,

        misc = NewPCIFButton -- NewRoundIFButton
        {
            x = right - spacing,
            btnw = BackButtonW,
            btnh = BackButtonH,
            font = "gamefont_medium",
            string = "ifs.freeform.endturn",
            tag = "_next",
        }, -- end of btn

        accept = NewPCIFButton -- NewRoundIFButton
        {
            x = right,
            btnw = BackButtonW,
            btnh = BackButtonH,
            font = "gamefont_medium",
            string = "common.accept",
            tag = "_accept",

        }, -- end of btn

        autoResolve = NewPCIFButton -- NewRoundIFButton
        {
            x = right - spacing,
            btnw = BackButtonW,
            btnh = BackButtonH,
            font = "gamefont_medium",
            string = "Auto Resolve", --"common.accept",
            tag = "_autoResolve",

        }, -- end of btn

        win = NewPCIFButton -- NewRoundIFButton
        {
            x = right - (2 * spacing),
            btnw = BackButtonW,
            btnh = BackButtonH,
            font = "gamefont_medium",
            string = "Win", --"common.accept",
            tag = "_win",

        }, -- end of btn

        back = NewPCIFButton -- NewRoundIFButton
        {
            x = left,
            btnw = BackButtonW,
            btnh = BackButtonH,
            font = "gamefont_medium",
            string = "common.back",
            tag = "_back",

        }, -- end of btn

        help = NewPCIFButton
        {
            x = left + spacing,
            btnw = BackButtonW,
            btnh = BackButtonH,
            font = "gamefont_medium",
            string = "ifs.freeform.help",
            tag = "_help",
        },
    }
else
    ifs_freeform_battle.action = NewIFContainer{
        ScreenRelativeX = 0.0, -- left
        ScreenRelativeY = 1.0, -- bottom
        width = action_w,
        height = action_h * 2,
        ZPos = 190,

        misc = NewHelptext {
            x = w*widescreen,
            buttonicon = "btnmisc",
            string = "ifs.freeform.endturn",
            bRightJustify = 1,
            y = -34,
        },


        accept = NewHelptext {
            x = w*widescreen,
            buttonicon = "btna",
            string = "common.accept",
            bRightJustify = 1,
            y = -15,
        },

        back = NewHelptext {
            x = 0,
            buttonicon = "btnb",
            string = "common.back",
            bLeftJustify = 1,
            y = -15,
        },

        help = NewHelptext {
            x = 0,
            buttonicon = "btnmisc2",
            string = "ifs.freeform.help",
            bLeftJustify = 1,
            y = -34,
        },
    }
end


ifs_freeform_battle.Enter = function(this, bFwd)
    gIFShellScreenTemplate_fnEnter(this, bFwd) -- call default enter function

    ifs_freeform_main:SetZoom(2)
    MoveCameraToEntity(ifs_freeform_main.planetSelected .. "_camera")

    IFObj_fnSetVis(this.title, nil)

    -- remove player group
    IFObj_fnSetVis(this.player, nil)

    -- allow back only if coming from player fleet movement
    this.allowBack = ifs_freeform_main.joystick and ScriptCB_IsScreenInStack("ifs_freeform_fleet")

    -- update button status
    ifs_freeform_SetButtonVis( this, "back", this.allowBack )
    if ifs_freeform_main.joystick then
        ifs_freeform_SetButtonName( this, "accept", "ifs.freeform.attack" )
        ifs_freeform_SetButtonName( this, "back", "ifs.freeform.noattack" )
    else
        ifs_freeform_SetButtonName( this, "accept", "common.next" )
    end
    ifs_freeform_SetButtonVis( this, "misc", nil )
    ifs_freeform_SetButtonVis(this, "help", nil)

    ---- NEW CODE ===============
    -- only show the button during fleet battles
    local isFleetBattle = ifs_freeform_main.planetFleet[ifs_freeform_main.planetNext] == 0
    ifs_freeform_SetButtonVis(this, "autoResolve", isFleetBattle)

    -- play appropriate VO messages and display caption and info text
    --if it's a deep space battle
    if not ifs_freeform_main.planetTeam[ifs_freeform_main.planetSelected] then
        if ifs_freeform_main.joystick then
            ifs_freeform_main:PlayVoice(string.format(ifs_battle_fleet_sound, ifs_freeform_main.playerSide, "us"))
        else
            ifs_freeform_main:PlayVoice(string.format(ifs_battle_fleet_sound, ifs_freeform_main.otherSide, "them"))
        end
        IFObj_fnSetVis(this.info, true)
        IFText_fnSetString(this.info.caption, "ifs.freeform.spacebattle")
        IFObj_fnSetVis(this.info.text, false)
        --if it's a space battle over a planet
    elseif ifs_freeform_main.planetFleet[ifs_freeform_main.planetSelected] == 0 then
        if ifs_freeform_main.joystick then
            ifs_freeform_main:PlayVoice(string.format(ifs_battle_fleet_sound, ifs_freeform_main.playerSide, "us"))
        else
            ifs_freeform_main:PlayVoice(string.format(ifs_battle_fleet_sound, ifs_freeform_main.otherSide, "them"))
        end
        IFObj_fnSetVis(this.info, true)
        IFText_fnSetString(this.info.text, "ifs.freeform.planetdesc." .. ifs_freeform_main.planetSelected)
        IFObj_fnSetVis(this.info.text, true)
        IFText_fnSetUString(this.info.caption,
                ScriptCB_usprintf("ifs.freeform.fleetbattle",
                        ScriptCB_getlocalizestr("planetname." .. ifs_freeform_main.planetSelected)
                )
        )
        --if it's a planet battle
    else
        if ifs_freeform_main.joystick then
            ifs_freeform_main:PlayVoice(string.format(ifs_battle_planet_sound, ifs_freeform_main.playerSide, ifs_freeform_main.planetSelected, "us"))
        else
            ifs_freeform_main:PlayVoice(string.format(ifs_battle_planet_sound, ifs_freeform_main.otherSide, ifs_freeform_main.planetSelected, "them"))
        end
        IFObj_fnSetVis(this.info, 1)
        IFText_fnSetString(this.info.text, "ifs.freeform.planetdesc." .. ifs_freeform_main.planetSelected)
        IFObj_fnSetVis(this.info.text, true)
        IFText_fnSetUString(this.info.caption,
                ScriptCB_usprintf("ifs.freeform.planetbattle",
                        ScriptCB_getlocalizestr("planetname." .. ifs_freeform_main.planetSelected)
                )
        )
    end

    -- if in soak mode...
    if ifs_freeform_main.soakMode then
        -- start a display timer
        this.displayTimer = 5
    end
end

ifs_freeform_battle.Input_Accept = function(this, joystick)
    if(gPlatformStr == "PC") then
        print( "this.CurButton = ", this.CurButton )
        if( this.CurButton == "_accept" ) then
            -- purchase the item
        ---- NEW CODE =============
        elseif( this.CurButton == "_autoResolve" ) then
            -- auto resolve match
            print("DEBUG: clicked auto resolve")
            ifs_freeform_battle.useAutoResolve = 1
        elseif( this.CurButton == "_win" ) then
            -- auto resolve match
            print("DEBUG: clicked win")
            ifs_freeform_battle.win = 1
        elseif( this.CurButton == "_back" ) then
            -- handle in Input_Back
            this:Input_Back(joystick)
            return
            --			elseif( this.CurButton == "_next" ) then
            --				return
        else
            return
        end
    end

    ifelm_shellscreen_fnPlaySound(this.acceptSound)

    -- go to the battle mode screen
    ScriptCB_PushScreen("ifs_freeform_battle_mode")
end -- Input_Accept

