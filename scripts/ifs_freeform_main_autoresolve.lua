---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by MileHighGuy.
--- DateTime: 2/5/2024 8:38 PM
---

---- NEW CODE
--- append our new code onto the beginning of ifs_freeform_main.Enter
--- this keeps the mod more compatible with other mods which might change this function
local originalFreeformMainFunc = ifs_freeform_main.Enter

ifs_freeform_main.Enter = function(this, bFwd)

    if ifs_freeform_battle.useAutoResolve then
        -- this is important somehow
        gIFShellScreenTemplate_fnEnter(this, bFwd)

        --reset the flag
        ifs_freeform_battle.useAutoResolve = nil

        local winner = this:GetAutoResolveWinner()

        -- apply battle results
        this:ApplyBattleResult(this.planetNext, winner)

        -- clear battle result
        ScriptCB_SetLastBattleVictoryValid(false)

        -- go to the result screen
        ScriptCB_PushScreen("ifs_freeform_result")

        -- trigger save request on next turn
        this.requestSave = true

        return --exit the Enter function, go to result screen
    end

    -- fall back to the usual function
    originalFreeformMainFunc(this, bFwd)
end

-- new function to get the winner from auto resolve
ifs_freeform_main.GetAutoResolveWinner = function(this)

    -- player is simply the player during the turn, not always the human player
    local playerTeam = this.playerTeam
    local enemyTeam = 3 - playerTeam
    -- the basic weight. The higher this is the other weights matter (bonus cards, units, etc)
    local startingWeight = 5
    local playerVictoryWeight = startingWeight
    local enemyVictoryWeight = startingWeight

    -- humans like to win
    local humanBonus = 2
    -- check remaster mod's database if they set "Humans Always Win" to "Yes"
    if rema_database.data.ARHumansWin and rema_database.data.ARHumansWin == 2 then
        print("loaded Humans Always Win")
        humanBonus = 500
    end

    if ifs_freeform_main.teamController[playerTeam] then
        print("DEBUG: player is human")
        playerVictoryWeight = playerVictoryWeight + humanBonus
    end
    if ifs_freeform_main.teamController[enemyTeam] then
        print("DEBUG: enemy is human")
        enemyVictoryWeight = enemyVictoryWeight + humanBonus
    end

    print("DEBUG: main: auto resolved battle")

    -- add victory weights to team depending on how many units they bought
    local purchasedUnitWeight = 1

    for unit, isPurchased in ifs_purchase_unit_owned[playerTeam] do

        -- unit is only in the table if purchased, but added for safety
        if isPurchased then

            print("adding weights for purchased unit for team " .. tostring(playerTeam))
            -- add basic weight bonus per purchased unit
            playerVictoryWeight = playerVictoryWeight + purchasedUnitWeight

            -- add double bonus for special units
            if unit == "officer"
                    or unit == "special" then
                playerVictoryWeight = playerVictoryWeight + purchasedUnitWeight
            end

        end
    end

    for unit, isPurchased in ifs_purchase_unit_owned[enemyTeam] do

        -- unit is only in the table if purchased, but added for safety
        if isPurchased then

            print("adding weights for purchased unit for team " .. tostring(enemyTeam))
            -- add basic weight bonus per purchased unit
            enemyVictoryWeight = enemyVictoryWeight + purchasedUnitWeight

            -- add double bonus for special units
            if unit == "officer"
                    or unit == "special" then
                enemyVictoryWeight = enemyVictoryWeight + purchasedUnitWeight
            end

        end
    end

    for team, bonus in pairs(this.activeBonus) do

        for index, tech in ifs_purchase_tech_table do
            if tech.bonus == bonus then
                for _, hint in ipairs(tech.hints) do
                    if string.find(ifs_freeform_main.launchMission, hint[1]) then
                        -- bonus card weights are found in ifs_purchase_tech_table_freeform in ifs_freeform_purchase_tech.lua
                        -- assigned to the above ifs_purchase_tech_table in SetFreeformMode in ifs_freeform_main.Enter
                        local bonusWeight = hint[2]
                        print("DEBUG: team " .. tostring(team) .. " bonus " .. tostring(bonus) .. " " .. tostring(bonusWeight))
                        if team == playerTeam then
                            playerVictoryWeight = playerVictoryWeight + bonusWeight
                        else
                            enemyVictoryWeight = enemyVictoryWeight + bonusWeight
                        end
                        break
                    end
                end
            end
        end
    end

    local planetBaseVictoryWeight = 5
    print("DEBUG: is player's base " .. tostring(this.planetBase[playerTeam] == this.planetNext))
    if this.planetBase[playerTeam] == this.planetNext then
        --planet is player's base
        playerVictoryWeight = playerVictoryWeight + planetBaseVictoryWeight
    end
    print("DEBUG: is enemy's base " .. tostring(this.planetBase[enemyTeam] == this.planetNext))
    if this.planetBase[enemyTeam] == this.planetNext then
        --planet is enemy's base
        enemyVictoryWeight = enemyVictoryWeight + planetBaseVictoryWeight
    end

    local totalWeight = playerVictoryWeight + enemyVictoryWeight
    local rand = math.random(1, totalWeight)

    print("\n\nDEBUG: playerTeam weight: " .. tostring(playerVictoryWeight)
            .. "\n      enemyTeam weight " .. tostring(enemyVictoryWeight) .. "\n")
    print("DEBUG: total weight " .. tostring(totalWeight))
    print("DEBUG: choice is " .. tostring(rand))

    print("is it a fleet battle? " .. tostring(this.planetFleet[this.planetNext] == 0))

    --default winner
    local winner = 1

    --determine the winner based on weighting
    if rand > playerVictoryWeight then
        winner = enemyTeam
        print("DEBUG: enemy wins")
    else
        winner = playerTeam
        print("DEBUG: player wins")
    end

    return winner
end